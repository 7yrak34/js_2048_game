{"mappings":"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","sources":["<anon>","src/scripts/main.js","node_modules/@swc/helpers/esm/_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_define_property.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","src/helpers/getRandomNumber.js"],"sourcesContent":["(function () {\nfunction $09cbfe85151ea6c6$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $a0bc1859061deae1$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $89eb4a55c543f071$export$71511d61b312f219(arr) {\n    return (0, $09cbfe85151ea6c6$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $a0bc1859061deae1$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $cd5a47cf8ef6d766$export$71511d61b312f219(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\n\nfunction $8ca2848f896a6803$export$71511d61b312f219(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\n\n\nfunction $efec029548ccee7f$export$71511d61b312f219(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$71511d61b312f219)(arr) || (0, $8ca2848f896a6803$export$71511d61b312f219)(arr, i) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr, i) || (0, $a0bc1859061deae1$export$71511d61b312f219)();\n}\n\n\nfunction $1d2aadeaa8dac9a4$export$eab19c48dcb6310d(min, max) {\n    return Math.floor(min + Math.random() * (max + 1 - min));\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : Array.from({\n            length: Game.GRID_SIZE\n        }, function() {\n            return Array(Game.GRID_SIZE).fill(0);\n        });\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        (0, $cd5a47cf8ef6d766$export$71511d61b312f219)(this, \"status\", Game.STATUS_IDLE);\n        this.state = initialState;\n        this.score = this.state.reduce(function(sum, row) {\n            var cellsSum = 0;\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                for(var _iterator = row[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var cell = _step.value;\n                    cellsSum += cell;\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n            return sum + cellsSum;\n        }, 0);\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"moveCells\",\n            value: function moveCells(matrix) {\n                var _this = this;\n                var isReverseDirection = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n                var sum = 0;\n                var result = matrix.map(function(row) {\n                    var filteredRow = row.filter(function(cell) {\n                        return cell !== 0;\n                    });\n                    if (isReverseDirection) filteredRow.reverse();\n                    var _this_mergeNumbers = (0, $efec029548ccee7f$export$71511d61b312f219)(_this.mergeNumbers(filteredRow), 2), mergedCells = _this_mergeNumbers[0], mergedSum = _this_mergeNumbers[1];\n                    sum += mergedSum;\n                    while(mergedCells.length < Game.GRID_SIZE)mergedCells.push(0);\n                    return isReverseDirection ? mergedCells.reverse() : mergedCells;\n                });\n                return [\n                    result,\n                    sum\n                ];\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this_moveCells = (0, $efec029548ccee7f$export$71511d61b312f219)(this.moveCells(this.state), 2), newState = _this_moveCells[0], mergedSum = _this_moveCells[1];\n                this.updateState(newState, this.score + mergedSum);\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this_moveCells = (0, $efec029548ccee7f$export$71511d61b312f219)(this.moveCells(this.state, true), 2), newState = _this_moveCells[0], mergedSum = _this_moveCells[1];\n                this.updateState(newState, this.score + mergedSum);\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var rotatedState = this.rotateMatrix(this.state);\n                var _this_moveCells = (0, $efec029548ccee7f$export$71511d61b312f219)(this.moveCells(rotatedState), 2), movedState = _this_moveCells[0], mergedSum = _this_moveCells[1];\n                var newState = this.rotateMatrix(movedState);\n                this.updateState(newState, this.score + mergedSum);\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var rotatedState = this.rotateMatrix(this.state);\n                var _this_moveCells = (0, $efec029548ccee7f$export$71511d61b312f219)(this.moveCells(rotatedState, true), 2), movedState = _this_moveCells[0], mergedSum = _this_moveCells[1];\n                var newState = this.rotateMatrix(movedState);\n                this.updateState(newState, this.score + mergedSum);\n            }\n        },\n        {\n            key: \"isMoveAvailable\",\n            value: function isMoveAvailable() {\n                var _this = this;\n                return this.state.some(function(row, rowIndex) {\n                    return row.some(function(cell, cellIndex) {\n                        if (cell === 0) return true;\n                        if (cellIndex !== row.length - 1 && cell === _this.state[rowIndex][cellIndex + 1]) return true;\n                        if (rowIndex !== _this.state.length - 1 && cell === _this.state[rowIndex + 1][cellIndex]) return true;\n                        return false;\n                    });\n                });\n            }\n        },\n        {\n            key: \"updateState\",\n            value: function updateState(newState, newScore) {\n                if (this.hasStateChanged(newState) && this.status === Game.STATUS_PLAYING) {\n                    this.state = newState;\n                    this.score = newScore;\n                    this.addRandomCell();\n                }\n                if (this.state.some(function(row) {\n                    return row.some(function(cell) {\n                        return cell === Game.WIN_NUMBER;\n                    });\n                })) {\n                    this.status = Game.STATUS_WIN;\n                    return;\n                }\n                if (!this.isMoveAvailable()) this.status = Game.STATUS_LOSE;\n            }\n        },\n        {\n            key: \"rotateMatrix\",\n            value: function rotateMatrix(matrix) {\n                var rotatedMatrix = [];\n                for(var cellIndex = 0; cellIndex < Game.GRID_SIZE; cellIndex++){\n                    var column = [];\n                    for(var rowIndex = 0; rowIndex < Game.GRID_SIZE; rowIndex++)column.push(matrix[rowIndex][cellIndex]);\n                    rotatedMatrix.push(column);\n                }\n                return rotatedMatrix;\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = Game.STATUS_PLAYING;\n                this.addRandomCell();\n                this.addRandomCell();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.state = Array.from({\n                    length: Game.GRID_SIZE\n                }, function() {\n                    return Array(Game.GRID_SIZE).fill(0);\n                });\n                this.status = Game.STATUS_PLAYING;\n                this.score = 0;\n                this.addRandomCell();\n                this.addRandomCell();\n            }\n        },\n        {\n            key: \"addRandomCell\",\n            value: function addRandomCell() {\n                var availableCells = [];\n                this.state.forEach(function(row, rowIndex) {\n                    row.forEach(function(cell, cellIndex) {\n                        if (cell === 0) availableCells.push({\n                            indexRow: rowIndex,\n                            indexCell: cellIndex\n                        });\n                    });\n                });\n                if (!availableCells.length) return;\n                var randomIndex = (0, $1d2aadeaa8dac9a4$export$eab19c48dcb6310d)(0, availableCells.length - 1);\n                var _availableCells_randomIndex = availableCells[randomIndex], indexRow = _availableCells_randomIndex.indexRow, indexCell = _availableCells_randomIndex.indexCell;\n                var newCellValue = Math.random() < 0.1 ? 4 : 2;\n                this.state[indexRow].splice(indexCell, 1, newCellValue);\n            }\n        },\n        {\n            key: \"mergeNumbers\",\n            value: function mergeNumbers(array) {\n                var result = [];\n                var mergedSum = 0;\n                for(var i = 0; i < array.length; i++){\n                    var cell = array[i];\n                    var nextCell = array[i + 1];\n                    if (cell === nextCell) {\n                        result.push(cell + nextCell);\n                        mergedSum += cell + nextCell;\n                        i++;\n                    } else result.push(cell);\n                }\n                return [\n                    result,\n                    mergedSum\n                ];\n            }\n        },\n        {\n            key: \"hasStateChanged\",\n            value: function hasStateChanged(newState) {\n                var isChanged = this.state.some(function(row, rowIndex) {\n                    return row.some(function(cell, cellIndex) {\n                        return cell !== newState[rowIndex][cellIndex];\n                    });\n                });\n                return isChanged;\n            }\n        }\n    ]);\n    return Game;\n}();\n(0, $cd5a47cf8ef6d766$export$71511d61b312f219)($3d28d7f1aac198f5$var$Game, \"GRID_SIZE\", 4);\n(0, $cd5a47cf8ef6d766$export$71511d61b312f219)($3d28d7f1aac198f5$var$Game, \"WIN_NUMBER\", 2048);\n(0, $cd5a47cf8ef6d766$export$71511d61b312f219)($3d28d7f1aac198f5$var$Game, \"STATUS_IDLE\", \"idle\");\n(0, $cd5a47cf8ef6d766$export$71511d61b312f219)($3d28d7f1aac198f5$var$Game, \"STATUS_PLAYING\", \"playing\");\n(0, $cd5a47cf8ef6d766$export$71511d61b312f219)($3d28d7f1aac198f5$var$Game, \"STATUS_WIN\", \"win\");\n(0, $cd5a47cf8ef6d766$export$71511d61b312f219)($3d28d7f1aac198f5$var$Game, \"STATUS_LOSE\", \"lose\");\n(0, $cd5a47cf8ef6d766$export$71511d61b312f219)($3d28d7f1aac198f5$var$Game, \"PUSH_METHOD\", \"push\");\n(0, $cd5a47cf8ef6d766$export$71511d61b312f219)($3d28d7f1aac198f5$var$Game, \"UNSHIFT_METHOD\", \"unshift\");\n(0, $cd5a47cf8ef6d766$export$71511d61b312f219)($3d28d7f1aac198f5$var$Game, \"MOVE_DIRECTIONS\", {\n    LEFT: \"left\",\n    RIGHT: \"right\",\n    UP: \"up\",\n    DOWN: \"down\"\n});\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$button = document.querySelector(\".button\");\nvar $197cd56b15c33885$var$score = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$_document_querySelectorAll = (0, $89eb4a55c543f071$export$71511d61b312f219)(document.querySelectorAll(\".field-cell\")), $197cd56b15c33885$var$cells = $197cd56b15c33885$var$_document_querySelectorAll.slice(0);\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\nfunction $197cd56b15c33885$var$hideMessages() {\n    $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n}\n$197cd56b15c33885$var$button.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$button.classList.contains(\"restart\")) $197cd56b15c33885$var$game.restart();\n    if ($197cd56b15c33885$var$button.classList.contains(\"start\")) {\n        $197cd56b15c33885$var$game.start();\n        document.addEventListener(\"keydown\", function(key) {\n            if ($197cd56b15c33885$var$game.status === $3d28d7f1aac198f5$exports.STATUS_PLAYING) {\n                switch(key.key){\n                    case \"ArrowLeft\":\n                        $197cd56b15c33885$var$game.moveLeft();\n                        break;\n                    case \"ArrowRight\":\n                        $197cd56b15c33885$var$game.moveRight();\n                        break;\n                    case \"ArrowUp\":\n                        $197cd56b15c33885$var$game.moveUp();\n                        break;\n                    case \"ArrowDown\":\n                        $197cd56b15c33885$var$game.moveDown();\n                        break;\n                }\n                $197cd56b15c33885$var$displayOnField($197cd56b15c33885$var$game.state);\n            }\n        });\n        $197cd56b15c33885$var$button.classList.remove(\"start\");\n        $197cd56b15c33885$var$button.textContent = \"Restart\";\n        $197cd56b15c33885$var$button.classList.add(\"restart\");\n    }\n    $197cd56b15c33885$var$hideMessages();\n    $197cd56b15c33885$var$displayOnField($197cd56b15c33885$var$game.state);\n});\nfunction $197cd56b15c33885$var$displayOnField(matrix) {\n    for(var rowIndex = 0; rowIndex < matrix.length; rowIndex++)for(var cellIndex = 0; cellIndex < matrix[rowIndex].length; cellIndex++){\n        var matrixCell = matrix[rowIndex][cellIndex];\n        var cell = $197cd56b15c33885$var$cells[$3d28d7f1aac198f5$exports.GRID_SIZE * rowIndex + cellIndex];\n        // instead of 0 we add empty string to the cell\n        var value = matrixCell === 0 ? \"\" : matrixCell;\n        if (cell.textContent !== value.toString()) {\n            cell.textContent = value;\n            cell.setAttribute(\"data-value\", matrixCell);\n        }\n    }\n    $197cd56b15c33885$var$score.textContent = $197cd56b15c33885$var$game.score;\n    switch($197cd56b15c33885$var$game.status){\n        case $3d28d7f1aac198f5$exports.STATUS_WIN:\n            $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n            break;\n        case $3d28d7f1aac198f5$exports.STATUS_LOSE:\n            $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n            break;\n    }\n}\n\n})();\n//# sourceMappingURL=index.9584720b.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst button = document.querySelector('.button');\nconst score = document.querySelector('.game-score');\nconst [...cells] = document.querySelectorAll('.field-cell');\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\n\nfunction hideMessages() {\n  messageStart.classList.add('hidden');\n  messageLose.classList.add('hidden');\n  messageWin.classList.add('hidden');\n}\n\nbutton.addEventListener('click', () => {\n  if (button.classList.contains('restart')) {\n    game.restart();\n  }\n\n  if (button.classList.contains('start')) {\n    game.start();\n\n    document.addEventListener('keydown', (key) => {\n      if (game.status === Game.STATUS_PLAYING) {\n        switch (key.key) {\n          case 'ArrowLeft':\n            game.moveLeft();\n            break;\n\n          case 'ArrowRight':\n            game.moveRight();\n            break;\n\n          case 'ArrowUp':\n            game.moveUp();\n            break;\n\n          case 'ArrowDown':\n            game.moveDown();\n            break;\n        }\n\n        displayOnField(game.state);\n      }\n    });\n\n    button.classList.remove('start');\n    button.textContent = 'Restart';\n    button.classList.add('restart');\n  }\n\n  hideMessages();\n  displayOnField(game.state);\n});\n\nfunction displayOnField(matrix) {\n  for (let rowIndex = 0; rowIndex < matrix.length; rowIndex++) {\n    for (let cellIndex = 0; cellIndex < matrix[rowIndex].length; cellIndex++) {\n      const matrixCell = matrix[rowIndex][cellIndex];\n      const cell = cells[Game.GRID_SIZE * rowIndex + cellIndex];\n      // instead of 0 we add empty string to the cell\n      const value = matrixCell === 0 ? '' : matrixCell;\n\n      if (cell.textContent !== value.toString()) {\n        cell.textContent = value;\n        cell.setAttribute('data-value', matrixCell);\n      }\n    }\n  }\n\n  score.textContent = game.score;\n\n  switch (game.status) {\n    case Game.STATUS_WIN:\n      messageWin.classList.remove('hidden');\n      break;\n\n    case Game.STATUS_LOSE:\n      messageLose.classList.remove('hidden');\n      break;\n  }\n}\n","import { _ as _array_with_holes } from \"./_array_with_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_array(arr) {\n    return _array_with_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_rest();\n}\nexport { _to_array as _ };\n","function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","'use strict';\nimport { getRandomNumber } from '../helpers/getRandomNumber.js';\n\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  constructor(\n    initialState = Array.from({ length: Game.GRID_SIZE }, () => {\n      return Array(Game.GRID_SIZE).fill(0);\n    }),\n  ) {\n    this.state = initialState;\n\n    this.score = this.state.reduce((sum, row) => {\n      let cellsSum = 0;\n\n      for (const cell of row) {\n        cellsSum += cell;\n      }\n\n      return sum + cellsSum;\n    }, 0);\n  }\n\n  static GRID_SIZE = 4;\n  static WIN_NUMBER = 2048;\n  static STATUS_IDLE = 'idle';\n  static STATUS_PLAYING = 'playing';\n  static STATUS_WIN = 'win';\n  static STATUS_LOSE = 'lose';\n  static PUSH_METHOD = 'push';\n  static UNSHIFT_METHOD = 'unshift';\n  static MOVE_DIRECTIONS = {\n    LEFT: 'left',\n    RIGHT: 'right',\n    UP: 'up',\n    DOWN: 'down',\n  };\n\n  status = Game.STATUS_IDLE;\n\n  moveCells(matrix, isReverseDirection = false) {\n    let sum = 0;\n\n    const result = matrix.map((row) => {\n      const filteredRow = row.filter((cell) => cell !== 0);\n\n      if (isReverseDirection) {\n        filteredRow.reverse();\n      }\n\n      const [mergedCells, mergedSum] = this.mergeNumbers(filteredRow);\n\n      sum += mergedSum;\n\n      while (mergedCells.length < Game.GRID_SIZE) {\n        mergedCells.push(0);\n      }\n\n      return isReverseDirection ? mergedCells.reverse() : mergedCells;\n    });\n\n    return [result, sum];\n  }\n\n  moveLeft() {\n    const [newState, mergedSum] = this.moveCells(this.state);\n\n    this.updateState(newState, this.score + mergedSum);\n  }\n\n  moveRight() {\n    const [newState, mergedSum] = this.moveCells(this.state, true);\n\n    this.updateState(newState, this.score + mergedSum);\n  }\n\n  moveUp() {\n    const rotatedState = this.rotateMatrix(this.state);\n    const [movedState, mergedSum] = this.moveCells(rotatedState);\n    const newState = this.rotateMatrix(movedState);\n\n    this.updateState(newState, this.score + mergedSum);\n  }\n\n  moveDown() {\n    const rotatedState = this.rotateMatrix(this.state);\n    const [movedState, mergedSum] = this.moveCells(rotatedState, true);\n    const newState = this.rotateMatrix(movedState);\n\n    this.updateState(newState, this.score + mergedSum);\n  }\n\n  isMoveAvailable() {\n    return this.state.some((row, rowIndex) => {\n      return row.some((cell, cellIndex) => {\n        if (cell === 0) {\n          return true;\n        }\n\n        if (\n          cellIndex !== row.length - 1 &&\n          cell === this.state[rowIndex][cellIndex + 1]\n        ) {\n          return true;\n        }\n\n        if (\n          rowIndex !== this.state.length - 1 &&\n          cell === this.state[rowIndex + 1][cellIndex]\n        ) {\n          return true;\n        }\n\n        return false;\n      });\n    });\n  }\n\n  updateState(newState, newScore) {\n    if (this.hasStateChanged(newState) && this.status === Game.STATUS_PLAYING) {\n      this.state = newState;\n      this.score = newScore;\n      this.addRandomCell();\n    }\n\n    if (\n      this.state.some((row) => row.some((cell) => cell === Game.WIN_NUMBER))\n    ) {\n      this.status = Game.STATUS_WIN;\n\n      return;\n    }\n\n    if (!this.isMoveAvailable()) {\n      this.status = Game.STATUS_LOSE;\n    }\n  }\n\n  rotateMatrix(matrix) {\n    const rotatedMatrix = [];\n\n    for (let cellIndex = 0; cellIndex < Game.GRID_SIZE; cellIndex++) {\n      const column = [];\n\n      for (let rowIndex = 0; rowIndex < Game.GRID_SIZE; rowIndex++) {\n        column.push(matrix[rowIndex][cellIndex]);\n      }\n\n      rotatedMatrix.push(column);\n    }\n\n    return rotatedMatrix;\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    return this.score;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.status = Game.STATUS_PLAYING;\n    this.addRandomCell();\n    this.addRandomCell();\n  }\n\n  restart() {\n    this.state = Array.from({ length: Game.GRID_SIZE }, () => {\n      return Array(Game.GRID_SIZE).fill(0);\n    });\n\n    this.status = Game.STATUS_PLAYING;\n    this.score = 0;\n    this.addRandomCell();\n    this.addRandomCell();\n  }\n\n  addRandomCell() {\n    const availableCells = [];\n\n    this.state.forEach((row, rowIndex) => {\n      row.forEach((cell, cellIndex) => {\n        if (cell === 0) {\n          availableCells.push({ indexRow: rowIndex, indexCell: cellIndex });\n        }\n      });\n    });\n\n    if (!availableCells.length) {\n      return;\n    }\n\n    const randomIndex = getRandomNumber(0, availableCells.length - 1);\n    const { indexRow, indexCell } = availableCells[randomIndex];\n    const newCellValue = Math.random() < 0.1 ? 4 : 2;\n\n    this.state[indexRow].splice(indexCell, 1, newCellValue);\n  }\n\n  mergeNumbers(array) {\n    const result = [];\n    let mergedSum = 0;\n\n    for (let i = 0; i < array.length; i++) {\n      const cell = array[i];\n      const nextCell = array[i + 1];\n\n      if (cell === nextCell) {\n        result.push(cell + nextCell);\n        mergedSum += cell + nextCell;\n        i++;\n      } else {\n        result.push(cell);\n      }\n    }\n\n    return [result, mergedSum];\n  }\n\n  hasStateChanged(newState) {\n    const isChanged = this.state.some((row, rowIndex) => {\n      return row.some((cell, cellIndex) => {\n        return cell !== newState[rowIndex][cellIndex];\n      });\n    });\n\n    return isChanged;\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","import { _ as _array_with_holes } from \"./_array_with_holes.js\";\nimport { _ as _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _ as _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","export function getRandomNumber(min, max) {\n  return Math.floor(min + Math.random() * (max + 1 - min));\n}\n"],"names":["$09cbfe85151ea6c6$export$71511d61b312f219","arr","Array","isArray","$a0bc1859061deae1$export$71511d61b312f219","TypeError","$c3b10a83b523f372$export$71511d61b312f219","len","length","i","arr2","$d4f69c5c6c4654b1$export$71511d61b312f219","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","$3d28d7f1aac198f5$exports","$cd5a47cf8ef6d766$export$71511d61b312f219","obj","key","value","defineProperty","enumerable","configurable","writable","$efec029548ccee7f$export$71511d61b312f219","_s","_e","_i","Symbol","iterator","_arr","_n","_d","next","done","push","err","$3d28d7f1aac198f5$var$Game","protoProps","Game","initialState","arguments","GRID_SIZE","fill","instance","Constructor","STATUS_IDLE","state","score","reduce","sum","row","cellsSum","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","cell","return","matrix","_this","isReverseDirection","map","filteredRow","filter","reverse","_this_mergeNumbers","mergeNumbers","mergedCells","mergedSum","_this_moveCells","moveCells","newState","updateState","rotatedState","rotateMatrix","movedState","some","rowIndex","cellIndex","newScore","hasStateChanged","status","STATUS_PLAYING","addRandomCell","WIN_NUMBER","STATUS_WIN","isMoveAvailable","STATUS_LOSE","rotatedMatrix","column","availableCells","forEach","indexRow","indexCell","randomIndex","Math","floor","min","random","max","_availableCells_randomIndex","newCellValue","splice","array","result","nextCell","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","LEFT","RIGHT","UP","DOWN","$197cd56b15c33885$var$game","$197cd56b15c33885$var$button","document","querySelector","$197cd56b15c33885$var$score","$197cd56b15c33885$var$cells","$197cd56b15c33885$var$_document_querySelectorAll","querySelectorAll","iter","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$displayOnField","matrixCell","textContent","setAttribute","classList","remove","addEventListener","contains","restart","start","moveLeft","moveRight","moveUp","moveDown","add"],"version":3,"file":"index.9584720b.js.map"}